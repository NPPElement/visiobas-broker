# docker-compose

version: '3.7'

networks:
  
  backend:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.16.0/24
          gateway: 172.16.16.1
          ip_range: 172.16.0.0/24
          
services:

# services for visiodesk 3.0 and visiodesk 4.0

  portainer:
    image:  portainer/portainer-ce
    container_name: portainer
    restart: always
    command: -H unix:///var/run/docker.sock
    environment:
      - VIRTUAL_HOST=broker
    networks:
      - backend
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./data/portainer:/data

  rabbit1:
    image: rabbitmq:3-management
    hostname: rabbit1
    container_name: rabbit1
    restart: always
    environment:
      RABBITMQ_ERLANG_COOKIE: "SWQOKODSQALRPCLNMEQG"
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USERNAME}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
      RABBITMQ_DEFAULT_VHOST: "/"
    ports:
      - 15675:15675
      - 1883:1883
      - 8883:8883
    user: root
    networks:
      - backend
    volumes:
      - ./conf/rabbit/enabled_plugins:/etc/rabbitmq/enabled_plugins
      - ./data/rabbit:/var/lib/rabbitmq
      - ./log/rabbit:/var/log/rabbitmq

  nginx:
    image: nginx:alpine
    #image: jwilder/nginx-proxy:latest
    container_name: proxy
    volumes:
      - ./home/visiodesk:/usr/share/nginx/html:ro
      - ./conf/nginx/conf:/etc/nginx/conf.d
      - ./conf/nginx/ssl/rootCA.crt:/etc/nginx/ssl/rootCA.crt:ro
      - ./conf/nginx/ssl/rootCA.key:/etc/nginx/ssl/rootCA.key:ro
      - ./data/nginx/dhparam:/etc/nginx/dhparam
      - ./data/nginx/vhost:/etc/nginx/vhost.d
      - ./data/nginx/certs:/etc/nginx/certs
      - /run/docker.sock:/tmp/docker.sock:ro
    restart: "always"
    ports:
      - "80:80"
      - "443:443"
    networks:
      - backend

# services only for visiodesk 4.0

  postgres:
    image: postgres
    container_name: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    hostname: ${POSTGRES_HOSTNAME}
    ports:
      - 5044:5432
    # entrypoint:
    #   - /entrypoint.sh
    networks:
      - backend
    volumes:
      - ./postgres/database:/var/lib/postgresql/data
      # - ./postgres/data.sql:/data.sql

  pgadmin4:
    image: dpage/pgadmin4
    container_name: pgadmin4
    environment: 
      PGADMIN_DEFAULT_EMAIL: "admin@visiodesk.net"
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_LISTEN_PORT: 80
    networks:
      - backend
    links: 
      - postgres 

# services only for visiodesk 3.0

  master:
    hostname: master
    container_name: master
    image: mariadb:10.5
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: 'Y'
      MYSQL_ROOT_USER: ${MYSQL_ROOT_USER}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      VISIODESK_ADMIN_PASSWORD: ${VISIODESK_ADMIN_PASSWORD}
      VISIODESK_USER_PASSWORD: ${VISIODESK_USER_PASSWORD}
      VISIODESK_GATEWAY_PASSWORD: ${VISIODESK_GATEWAY_PASSWORD}
      command: 
    networks:
      - backend
    volumes:
      - ./conf/mxs/sql/init-files:/opt
      - ./conf/mxs/sql/master:/docker-entrypoint-initdb.d
      - ./data/db-master:/var/lib/mysql
    command: mysqld --log-bin=mariadb-bin --binlog-format=ROW --server-id=3000 --log-slave-updates

  phpmyadmin:
    image: phpmyadmin
    container_name: phpmyadmin
    environment:
    - PMA_ARBITRARY=1
    restart: always
    networks:
      - backend
    volumes:
     - /sessions

  visiodesk:
    image: jboss/wildfly:21.0.2.Final
    hostname: visiodesk
    container_name: visiodesk
    restart: always
    user: root
    environment:
      - WILDFLY_PUBLIC_CONSOLE=1
      - WILDFLY_USERNAME=${WILDFLY_USERNAME}
      - WILDFLY_PASSWORD=${WILDFLY_PASSWORD}
      - WILDFLY_NAME=${WILDFLY_NAME}
      - 'VISIODESK_VBAS_CONNECT_STRING=jdbc:mysql://master/vbas?useUnicode=true&connectionCollation=utf8_general_ci&characterSetResults=utf8&characterEncoding=utf8&user=root&password=admin'
      - MQTT_BROKER_URL_WEB=ws://${VISIODESK_HOSTNAME}:15675/ws
      - MQTT_BROKER_URL_SERVER=tcp://${VISIODESK_HOSTNAME}:1883
      - MQTT_USERNAME=${MQTT_USERNAME}
      - MQTT_PASSWORD=${MQTT_PASSWORD}
      - MQTT_PARSE_METHOD=light
      - MQTT_CLIENT_ID=client_${VISIODESK_HOSTNAME}
    ports:
      - 9990:9990
      - 9090:8080
      - 8080:8080
    networks:
      - backend
    links:
      - master
    command: >
         bash -c "/opt/jboss/wildfly/bin/add-user.sh $$WILDFLY_USERNAME $$WILDFLY_PASSWORD --silent
         && /opt/jboss/wildfly/bin/standalone.sh -c standalone.xml -b 0.0.0.0 -bmanagement 0.0.0.0 --debug"
    volumes:
      - ./conf/visiodesk/deployments:/opt/jboss/wildfly/standalone/deployments
      - ./conf/visiodesk/services:/opt/services
      - ./conf/visiodesk/modules/mysql:/opt/jboss/wildfly/modules/system/layers/base/com/mysql
      - ./conf/visiodesk/modules/common:/opt/jboss/wildfly/modules/system/layers/base/net/visiodesk/common
      - ./home/visiodesk:/opt/jboss/wildfly/welcome-content
      - ./log/visiodesk:/opt/jboss/wildfly/standalone/log/:rw
      - ./conf/visiodesk/configuration/standalone.xml:/opt/jboss/wildfly/standalone/configuration/standalone.xml
      - ./conf/visiodesk/configuration/ssl.sh:/opt/jboss/wildfly/standalone/configuration/ssl.sh

# agent gateway
  vb_gateway:
    container_name: gateway
    build:
      context: /opt/visiobas-gateway
      dockerfile: Dockerfile
    image: visiobas-gateway:3.3.0-alpha
    logging:
      #driver: none
      driver: "json-file"
      options:
        max-file: "2"
        max-size: "1024k"
    restart: always
    privileged: true # [1]
    env_file:
      - /opt/visiobas-gateway/config/gateway.env
      - /opt/visiobas-gateway/config/http.env
      - /opt/visiobas-gateway/config/api.env
    environment:
      - TZ=Europe/Moscow
      - PYTHONPATH=/
      # Logging
      - PYTHONASYNCIODEBUG=0
      #- GTW_LOG_FORMAT="%(levelname)-8s [%(asctime)s] [%(threadName)s] %(name)s.%(funcName)s(%(lineno)d): %(message)s"
      - GTW_LOG_LEVEL=DEBUG
      - GTW_LOG_FILE_SIZE=50 # in MB
      - GTW_LOG_FILE_LEVEL=DEBUG
    volumes:
      #- /opt/visiobas-gateway/logs:/usr/share/python3/gtw/gateway/logs
      - /opt/visiobas-gateway/gateway:/usr/share/python3/gtw/lib/python3.9/site-packages/gateway
      - /dev:/dev # [1]
    network_mode: host
    #ports:
    #  - 7070:7070
    devices: # To detect Modbus RTU devices
      - "/dev/ttyS0:/dev/ttyS0"
      - "/dev/ttyUSB0:/dev/ttyUSB0"

# other services

  webdav:
    image: jboss/wildfly
    hostname: webdav
    container_name: webdav
    restart: always
    user: root
    environment:
      - WEBDAV_ROOT_LOGIN=${WEBDAV_ROOT_LOGIN}
      - WEBDAV_ROOT_PASSWORD=${WEBDAV_ROOT_PASSWORD}
    networks:
      - backend
    command: /opt/jboss/wildfly/bin/standalone.sh -b 0.0.0.0 -bmanagement 0.0.0.0 --debug
    volumes: 
      - ./home/music:/opt/webdav/webdav-files
      - ./conf/webdav/deployments:/opt/jboss/wildfly/standalone/deployments
      - ./conf/webdav/webdav-settings:/opt/webdav/webdav-settings
      - ./log/webdav:/opt/jboss/wildfly/standalone/log/:rw

  # dbclient:
  #   hostname: dbclient
  #   container_name: dbclient
  #   image: alpine
  #   depends_on:
  #     - master
  #   networks:
  #     - backend
  #   environment:
  #     - BACKUP_ENABLED=1
  #     - BACKUP_INTERVAL=86400
  #     - BACKUP_PATH=/data
  #     - BACKUP_FILENAME=db_backup
  #   entrypoint: |
  #     sh -c 'sh -s << EOF
  #     apk add --no-cache mysql-client
  #     while true
  #       do
  #         if [ $$BACKUP_ENABLED == 1 ]
  #           then
  #             sleep $$BACKUP_INTERVAL
  #             mkdir -p $$BACKUP_PATH/$$(date +%F)
  #             echo "$$(date +%FT%H.%m) - Making Backup to : $$BACKUP_PATH/$$(date +%F)/$$BACKUP_FILENAME-$$(date +%FT%H.%m).sql.gz"
  #             mysqldump -umaxuser -pmaxpwd -h master -P 4008 --all-databases | gzip > $$BACKUP_PATH/$$(date +%F)/$$BACKUP_FILENAME-$$(date +%FT%H.%m).sql.gz
  #             find $$BACKUP_PATH -mtime 7 -delete
  #         fi
  #       done
  #     EOF'
  #   volumes:
  #     - ./home/db-backup:/data

  # apache-php7:
  #   image: nimmis/apache-php7
  #   container_name: apache-php7
  #   hostname: apache-php7
  #   volumes:
  #     - ./conf/php/projects:/var/www/html
  #     - ./conf/php/config/php.ini:/usr/local/etc/php/conf.d/40-custom.ini:ro
  #   ports:
  #     - 8000:80
  #   networks:
  #     - backend
  #   links:
  #     - master

  # cloud9:
  #   image: kdelfour/cloud9-docker
  #   container_name: cloud9
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=Europe/London
  #     - USERNAME=admin #optional
  #     - PASSWORD=admin #optional
  #   volumes:
  #     - ./home/visiodesk/svg:/workspace
  #     - ./conf/cloud9/c9-logo-blue@2x.png:/cloud9/plugins/c9.ide.layout.classic/images/c9-logo-blue@2x.png
  #     #- /var/run/docker.sock:/var/run/docker.sock
  #   ports:
  #     - 9999:80
  #   restart: unless-stopped

  # cloud9-php:
  #   image: kdelfour/cloud9-docker
  #   container_name: cloud9-php
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=Europe/London
  #     - USERNAME=admin
  #     - PASSWORD=admin
  #   volumes:
  #     - ./conf/php/projects:/workspace
  #     - ./conf/cloud9/c9-logo-blue@2x.png:/cloud9/plugins/c9.ide.layout.classic/images/c9-logo-blue@2x.png
  #   networks:
  #     - backend
  #   ports:
  #     - 9000:80

  # client:
  #   container_name: client
  #   image: alpine
  #   networks:
  #     - backend
  #   entrypoint: |
  #     sh -c 'sh -s << EOF
  #     apk add --no-cache wget
  #     EOF'
  #        sleep 2 && wget -O /dev/null http://visiodesk/vdesk/external/task/push &
  #        sleep 60 && wget -O /dev/null http://apache-php7/electro.php &
  #        sleep 60 && wget -O /dev/null http://apache-php7/zap1.php &
  #     while true
  #      do
  #     sleep 60
  #      done
