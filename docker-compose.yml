# Docker-compose
version: '3.7'

networks:
  
  backend:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.16.0/24
          gateway: 172.16.16.1
          ip_range: 172.16.0.0/24

services:

  portainer:
    image:  portainer/portainer-ce
    container_name: portainer
    restart: always
    command: -H unix:///var/run/docker.sock
    environment:
      - VIRTUAL_HOST=broker
    networks:
      - backend
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./data/portainer:/data

  rabbit1:
    image: rabbitmq:3-management
    hostname: rabbit1
    container_name: rabbit1
    restart: always
    environment:
      RABBITMQ_ERLANG_COOKIE: "SWQOKODSQALRPCLNMEQG"
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USERNAME}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
      RABBITMQ_DEFAULT_VHOST: "/manager/rabbit/"
    ports:
      - 15675:15675
      - 1883:1883
      - 8883:8883
    user: root
    networks:
      - backend
    volumes:
      - ./conf/rabbit/enabled_plugins:/etc/rabbitmq/enabled_plugins
      - ./data/rabbit:/var/lib/rabbitmq
      - ./log/rabbit:/var/log/rabbitmq

  nginx:
    image: jwilder/nginx-proxy:latest
    container_name: proxy
    volumes:
      - ./conf/nginx/www:/usr/share/nginx/html
      - ./conf/nginx/conf:/etc/nginx/conf.d
      - ./data/nginx/dhparam:/etc/nginx/dhparam
      - ./data/nginx/vhost:/etc/nginx/vhost.d
      - ./data/nginx/certs:/etc/nginx/certs
      - /run/docker.sock:/tmp/docker.sock:ro
    restart: "always"
    ports:
      - "80:80"
      - "443:443"
    networks:
      - backend

  maxscale:
    container_name: maxscale
    image: mariadb/maxscale:2.4
    depends_on:
      - master
      - slave1
      - slave2
    volumes:
      - ./conf/mxs/maxscale.cnf.d:/etc/maxscale.cnf.d
    networks:
      backend:
        ipv4_address: 172.16.16.60
    ports:
      - 4006:4006  # readwrite port
      - 4008:4008  # readonly port
      - 8989:8989  # REST API port

  master:
    hostname: master
    container_name: master
    image: mariadb:10.5
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: 'Y'
      MYSQL_ROOT_USER: ${MYSQL_ROOT_USER}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      VISIODESK_ADMIN_PASSWORD: ${VISIODESK_ADMIN_PASSWORD}
      VISIODESK_USER_PASSWORD: ${VISIODESK_USER_PASSWORD}
      VISIODESK_GATEWAY_PASSWORD: ${VISIODESK_GATEWAY_PASSWORD}
      command: 
    volumes:
      - ./conf/mxs/sql/init-files:/opt
      - ./conf/mxs/sql/master:/docker-entrypoint-initdb.d
      - ./data/db-master:/var/lib/mysql
    command: mysqld --log-bin=mariadb-bin --binlog-format=ROW --server-id=3000 --log-slave-updates
    networks:  
      backend:
        ipv4_address: 172.16.16.69
    ports:
      - "4001:3306"

  slave1:
    hostname: slave1
    container_name: slave1
    image: mariadb:10.5
    depends_on:
      - master
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: 'Y'
    volumes:
      - ./conf/mxs/sql/slave:/docker-entrypoint-initdb.d
      - ./data/db-slave1:/var/lib/mysql
    command: mysqld --log-bin=mariadb-bin --binlog-format=ROW --server-id=3001 --log-slave-updates
    networks:
      backend:
        ipv4_address: 172.16.16.61
    ports:
      - "4002:3306"

  slave2:
    hostname: slave2
    container_name: slave2
    image: mariadb:10.5
    depends_on:
      - master
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: 'Y'
    volumes:
      - ./conf/mxs/sql/slave:/docker-entrypoint-initdb.d
      - ./data/db-slave2:/var/lib/mysql
    command: mysqld --log-bin=mariadb-bin --binlog-format=ROW --server-id=3002 --log-slave-updates
    networks:  
      backend:
        ipv4_address: 172.16.16.62
    ports:
      - "4003:3306"

  dbclient:
    hostname: dbclient
    container_name: dbclient
    image: alpine
    depends_on:
      - maxscale
    environment:
      - BACKUP_ENABLED=1
      - BACKUP_INTERVAL=3600
      - BACKUP_PATH=/data
      - BACKUP_FILENAME=db_backup
    networks:
      - backend
    entrypoint: |
      sh -c 'sh -s << EOF
      apk add --no-cache mysql-client
      while true
        do
          if [ $$BACKUP_ENABLED == 1 ]
            then
              sleep $$BACKUP_INTERVAL
              mkdir -p $$BACKUP_PATH/$$(date +%F)
              echo "$$(date +%FT%H.%m) - Making Backup to : $$BACKUP_PATH/$$(date +%F)/$$BACKUP_FILENAME-$$(date +%FT%H.%m).sql.gz"
              mysqldump -umaxuser -pmaxpwd -h maxscale -P 4008 --all-databases | gzip > $$BACKUP_PATH/$$(date +%F)/$$BACKUP_FILENAME-$$(date +%FT%H.%m).sql.gz
              find $$BACKUP_PATH -mtime 7 -delete
          fi
        done
      EOF'
    volumes:
      - ./home/db-backup:/data

  phpmyadmin:
    image: phpmyadmin
    container_name: phpmyadmin
    environment:
    - PMA_ARBITRARY=1
    restart: always
    networks:
      - backend
    volumes:
     - /sessions

  # webdav:
  #   image: jboss/wildfly
  #   hostname: webdav
  #   container_name: webdav
  #   restart: always
  #   user: root
  #   environment:
  #     - WEBDAV_ROOT_LOGIN=${WEBDAV_ROOT_LOGIN}
  #     - WEBDAV_ROOT_PASSWORD=${WEBDAV_ROOT_PASSWORD}
  #   networks:
  #     backend:
  #       ipv4_address: 172.16.16.40
  #   command: /opt/jboss/wildfly/bin/standalone.sh -b 0.0.0.0 -bmanagement 0.0.0.0 --debug
  #   volumes: 
  #     - ./home/visiodesk/svg:/opt/webdav/webdav-files
  #     - ./conf/webdav/deployments:/opt/jboss/wildfly/standalone/deployments
  #     - ./conf/webdav/webdav-settings:/opt/webdav/webdav-settings
  #     - ./log/webdav:/opt/jboss/wildfly/standalone/log/:rw


  cloud9:
    image: kdelfour/cloud9-docker
    container_name: cloud9
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
      - USERNAME=admin #optional
      - PASSWORD=admin #optional
    volumes:
      - ./home/visiodesk/svg:/workspace
      - ./conf/cloud9/c9-logo-blue@2x.png:/cloud9/plugins/c9.ide.layout.classic/images/c9-logo-blue@2x.png
      #- /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 9999:80
    restart: unless-stopped

  cloud9-php:
    image: kdelfour/cloud9-docker
    container_name: cloud9-php
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
      - USERNAME=admin #optional
      - PASSWORD=admin #optional
    volumes:
      - ./conf/php8/projects:/workspace
      - ./conf/cloud9/c9-logo-blue@2x.png:/cloud9/plugins/c9.ide.layout.classic/images/c9-logo-blue@2x.png
    ports:
      - 9998:80
    restart: unless-stopped

  visiodesk:
    image: jboss/wildfly:21.0.2.Final
    hostname: visiodesk
    container_name: visiodesk
    restart: always
    user: root
    links:
      - maxscale
    environment:
      - WILDFLY_PUBLIC_CONSOLE=1
      - WILDFLY_USERNAME=${WILDFLY_USERNAME}
      - WILDFLY_PASSWORD=${WILDFLY_PASSWORD}
      - WILDFLY_NAME=${WILDFLY_NAME}
      - 'VISIODESK_VBAS_CONNECT_STRING=jdbc:mysql://172.16.16.60:4006/vbas?useUnicode=true&connectionCollation=utf8_general_ci&characterSetResults=utf8&characterEncoding=utf8&user=maxuser&password=maxpwd'
      - MQTT_BROKER_URL_WEB=ws://visiodesk.net:15675/ws
      - MQTT_BROKER_URL_SERVER=tcp://visiodesk.net:1883
      - MQTT_USERNAME=user
      - MQTT_PASSWORD=user
      - MQTT_PARSE_METHOD=light
      - MQTT_CLIENT_ID=clientVisiodesk
      #- WILDFLY_HOST=visiodesk.net
    ports:
      - 9990:9990
    networks:
      - backend
    command: >
         bash -c "/opt/jboss/wildfly/bin/add-user.sh $$WILDFLY_USERNAME $$WILDFLY_PASSWORD --silent
         && /opt/jboss/wildfly/bin/standalone.sh -c standalone.xml -b 0.0.0.0 -bmanagement 0.0.0.0 --debug"
    #entrypoint: /opt/jboss/wildfly/bin/standalone.sh -b=0.0.0.0 -bmanagement=0.0.0.0 -Djboss.server.default.config=standalone-full-ha.xml -Djboss.node.name=wildfly2 -Djava.net.preferIPv4Stack=true -Djgroups.bind_addr=wildfly2 -Djboss.messaging.cluster.password=admin
    volumes:
      - ./conf/visiodesk/deployments:/opt/jboss/wildfly/standalone/deployments
      - ./conf/visiodesk/modules/mysql:/opt/jboss/wildfly/modules/system/layers/base/com/mysql
      - ./conf/visiodesk/modules/common:/opt/jboss/wildfly/modules/system/layers/base/net/visiodesk/common
      - ./home/visiodesk:/opt/jboss/wildfly/welcome-content
      - ./log/visiodesk:/opt/jboss/wildfly/standalone/log/:rw
      - ./conf/visiodesk/configuration/standalone.xml:/opt/jboss/wildfly/standalone/configuration/standalone.xml
      - ./conf/visiodesk/configuration/ssl.sh:/opt/jboss/wildfly/standalone/configuration/ssl.sh
      #- ./home/configuration:/opt/jboss/wildfly/standalone/configuration:rw

  php-8:
    build: ./conf/php-8/build
    container_name: php-8
    image: php-8
    restart: unless-stopped
    entrypoint: "php -S 0.0.0.0:8000"
    ports:
      - 8000:8000
    volumes:
      - ./conf/php-8/config/msmtprc:/etc/msmtprc:ro
      - ./conf/php-8/config/php.ini:/usr/local/etc/php/conf.d/my.ini:ro
      - ./conf/php-8/config/www.conf:/usr/local/etc/php-fpm.d/www.conf:ro
      - ./conf/php-8/composer/:/root/.composer/
      - ./conf/php-8/projects/:/var/www/html
    logging:
      driver: "json-file"
      options:
        max-size: "1024k"
        max-file: "2"
      